# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  # Label of the container job
  container-job:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: node:10.18-jessie

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v3

      # Performs a clean installation of all dependencies in the `package.json` file
      # For more information, see https://docs.npmjs.com/cli/ci.html
      - name: Install dependencies
        uses: borales/actions-yarn@v3.0.0
        with:
          cmd: install

      # - name: Build dependencies
      #   uses: borales/actions-yarn@v3.0.0
      #   with:
      #     cmd: build

      - name: Connect to PostgreSQL
        # Runs a script that creates a PostgreSQL table, populates
        # the table with data, and then retrieves the data.
        run: node client.js
        # Environment variables used by the `client.js` script to create a new PostgreSQL table.
        env:
          # The hostname used to communicate with the PostgreSQL service container
          # POSTGRES_HOST: ec2-54-147-33-38.compute-1.amazonaws.com
          # The default PostgreSQL port
          # POSTGRES_PORT: 5432
          NODE_ENV: production

      - name: Test # will run `yarn build` command
        uses: borales/actions-yarn@v3.0.0
        with:
          cmd: test # will run `yarn test` command

# jobs:
#   build:
#     name: Test
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - uses: borales/actions-yarn@v3.0.0
#         with:
#           cmd: install # will run `yarn install` command
#       # - uses: borales/actions-yarn@v3.0.0
#       #   with:
#       #     cmd: build # will run `yarn build` command
#       - uses: borales/actions-yarn@v3.0.0
#         with:
#           cmd: test # will run `yarn test` command
